[{"D:\\course\\contact-keeper\\client\\src\\index.js":"1","D:\\course\\contact-keeper\\client\\src\\App.js":"2","D:\\course\\contact-keeper\\client\\src\\components\\layout\\Navbar.js":"3","D:\\course\\contact-keeper\\client\\src\\components\\pages\\Home.js":"4","D:\\course\\contact-keeper\\client\\src\\components\\pages\\About.js":"5","D:\\course\\contact-keeper\\client\\src\\context\\contact\\ContactState.js":"6","D:\\course\\contact-keeper\\client\\src\\context\\contact\\contactContext.js":"7","D:\\course\\contact-keeper\\client\\src\\context\\types.js":"8","D:\\course\\contact-keeper\\client\\src\\context\\contact\\contactReducer.js":"9","D:\\course\\contact-keeper\\client\\src\\components\\contacts\\Contacts.js":"10","D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactItem.js":"11","D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactForm.js":"12","D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactFilter.js":"13"},{"size":200,"mtime":1608270811744,"results":"14","hashOfConfig":"15"},{"size":731,"mtime":1608614385085,"results":"16","hashOfConfig":"15"},{"size":759,"mtime":1608280431745,"results":"17","hashOfConfig":"15"},{"size":422,"mtime":1609299494236,"results":"18","hashOfConfig":"15"},{"size":399,"mtime":1608280321748,"results":"19","hashOfConfig":"15"},{"size":2694,"mtime":1609162769985,"results":"20","hashOfConfig":"15"},{"size":117,"mtime":1608310433110,"results":"21","hashOfConfig":"15"},{"size":413,"mtime":1608470048667,"results":"22","hashOfConfig":"15"},{"size":1342,"mtime":1609157448351,"results":"23","hashOfConfig":"15"},{"size":1059,"mtime":1609312168853,"results":"24","hashOfConfig":"15"},{"size":1540,"mtime":1608966786361,"results":"25","hashOfConfig":"15"},{"size":2597,"mtime":1609141355996,"results":"26","hashOfConfig":"15"},{"size":804,"mtime":1609290568902,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1fl1pqu",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\course\\contact-keeper\\client\\src\\index.js",[],["57","58"],"D:\\course\\contact-keeper\\client\\src\\App.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\layout\\Navbar.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\pages\\Home.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\pages\\About.js",[],"D:\\course\\contact-keeper\\client\\src\\context\\contact\\ContactState.js",["59"],"import React, { useReducer } from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACT,\r\n    CLEAR_FILTER\r\n} from '../types';\r\nimport contactContext from './contactContext';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name:'Jill Johnson',\r\n                email: 'jill@gmail.com',\r\n                phone: '111-111-111',\r\n                type: 'professional'\r\n            },\r\n            {\r\n                id: 2,\r\n                name:'Sara Johnson',\r\n                email: 'sara@gmail.com',\r\n                phone: '111-111-111',\r\n                type: 'personal'\r\n            },\r\n            {\r\n                id: 3,\r\n                name:'Harry Johnson',\r\n                email: 'harry@gmail.com',\r\n                phone: '111-111-111',\r\n                type: 'personal'\r\n            },\r\n        ],\r\n        current: null,\r\n        filtered: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    //add contact\r\n    const addContact = contact => {\r\n        contact.id = uuid;\r\n        dispatch({ type: ADD_CONTACT, payload: contact });\r\n    };\r\n\r\n    //delete contact\r\n    const deleteContact = id => {       \r\n        dispatch({ type: DELETE_CONTACT, payload: id });\r\n    };\r\n\r\n    //set current contact\r\n    const setCurrent = contact => {       \r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    };\r\n\r\n    //clear current contact\r\n    const clearCurrent = () => {       \r\n        dispatch({ type: CLEAR_CURRENT});\r\n    };\r\n\r\n    //update contact\r\n    const updateContact = contact => {       \r\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n    };\r\n\r\n\r\n    //filter contacts\r\n    const filterContacts = text => {       \r\n        dispatch({ type: FILTER_CONTACT, payload: text });\r\n    };\r\n    //clear filter \r\n    const clearFilter = () => {       \r\n        dispatch({ type: CLEAR_FILTER});\r\n    };\r\n    return (\r\n        <ContactContext.Provider\r\n        value={{\r\n             contacts: state.contacts,\r\n             current: state.current,\r\n             filtered: state.filtered,\r\n             addContact,\r\n             deleteContact,\r\n             setCurrent,\r\n             clearCurrent,\r\n             updateContact,\r\n             filterContacts,\r\n             clearFilter\r\n        }}\r\n        >\r\n        {props.children}\r\n        </ContactContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ContactState;","D:\\course\\contact-keeper\\client\\src\\context\\contact\\contactContext.js",[],"D:\\course\\contact-keeper\\client\\src\\context\\types.js",[],"D:\\course\\contact-keeper\\client\\src\\context\\contact\\contactReducer.js",["60"],"import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACT:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\course\\contact-keeper\\client\\src\\components\\contacts\\Contacts.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactItem.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactForm.js",[],"D:\\course\\contact-keeper\\client\\src\\components\\contacts\\ContactFilter.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":14,"column":8,"nodeType":"67","messageId":"68","endLine":14,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":11,"column":1,"nodeType":"71","endLine":59,"endColumn":3},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'contactContext' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]